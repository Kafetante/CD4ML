version: "3.7"
services:
  reverse-proxy:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - /etc/ssl/mycerts:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yaml:/etc/traefik/traefik.yaml


  welcome:
    container_name: welcome_server
    restart: always
    image: httpd:2.4-alpine
    ports:
      - "3000:80"
    volumes:
      - ./public-html:/usr/local/apache2/htdocs/
    networks:
      - jenkins_nw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.welcome.rule=Host(`mercury.andrena.de`)"
      - "traefik.http.routers.welcome.entrypoints=websecure"
      - "traefik.http.services.welcome.loadbalancer.server.port=3000"

  jenkins:
    container_name: jenkins
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-jenkins
    ports:
      - "10000:8080"
    environment:
        FLUENTD_HOST: fluentd
        FLUENTD_PORT: 24224
        TENANT: "jenkins"
        ACCESS_KEY: ${ACCESS_KEY}
        SECRET_KEY: ${SECRET_KEY}
    volumes:
      - jenkins_home:/var/jenkins_home
    secrets:
      - jenkins-admin-password
    networks:
      - jenkins_nw

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    restart: always
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - http.port=9200
      - http.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - jenkins_nw
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on: 
      - jenkins

  kib01:
    image: docker.elastic.co/kibana/kibana:7.16.3
    restart: always
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - jenkins_nw
    depends_on: 
      - es01
      

  fluentd:
    image: ericnaglertw/cd4ml-fluentd:1
    restart: always
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
    networks:
      - jenkins_nw
    depends_on: 
      - es01

  model:
    build:
      context: .
      dockerfile: Dockerfile-model
    container_name: model
    restart: always
    ports:
      - "11000:5005"
    environment:
      FLUENTD_HOST: fluentd
      FLUENTD_PORT: 24224
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      ACCESS_KEY: ${ACCESS_KEY}
      SECRET_KEY: ${SECRET_KEY}
    networks:
      - jenkins_nw
    depends_on: 
      - fluentd
      - minio

  minio:
    image: minio/minio:RELEASE.2022-01-27T03-53-02Z
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${SECRET_KEY}
    entrypoint: sh
    command: -c 'mkdir -p /data/cd4ml-ml-flow-bucket && minio server /data --console-address :9001'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio-storage:/data
    networks:
      - jenkins_nw

  mlflow:
    container_name: mlflow
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${SECRET_KEY}
    ports:
      - "12000:5000"
    networks:
      - jenkins_nw
    volumes:
      - mlflow-storage:/mnt/mlflow
    depends_on:
      - minio

volumes:
  jenkins_home:
    driver: local
  data01:
    driver: local
  minio-storage:
    driver: local
  mlflow-storage:
    driver: local

networks:
  jenkins_nw:
    driver: bridge

secrets:
  jenkins-admin-password:
    file: ./jenkins/jenkins-admin-password.txt
